version: "3.7"
services:

  mysql:
    image: mysql:5.7.22
    container_name: mysql
    restart: unless-stopped
    tty: true
    env_file: .env
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8 --collation-server=utf8_general_ci
    volumes:
        - mysql_data:/var/lib/mysql
    expose:
      - "3306"
    networks:
      - net

  url_reducer:
    build: url_reducer
    env_file: .env
    command: /bin/sh /code/entrypoint.sh
    container_name: url_reducer
    restart: unless-stopped
    volumes:
       - static_data:/vol/web/static
       - /etc/localtime:/etc/localtime:ro
    expose:
      - "8000"
    depends_on:
      - redis
      - mysql
    networks:
      - net

  proxy:
    container_name: proxy
    restart: unless-stopped
    build:
      context: ./proxy
    volumes:
      - static_data:/vol/web/static
    expose:
      - "8000"
    depends_on:
      - redis
      - mysql
      - url_reducer
    networks:
      - net

  redis:
    container_name: redis
    build:
      context: ./redis
    restart: always
    volumes:
    - ./storage/redis/data:/data
    expose:
      - "6379"
    networks:
      - net

  celery-worker:
    build: ./url_reducer/
    container_name: celery_worker
    hostname: celery_worker
    restart: always
    env_file: .env
    command: "celery --app url_reducer worker -l INFO --pool=solo"
    volumes:
      - url_reducer:/code/url_reducer
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - url_reducer
      - mysql
      - redis
    networks:
      - net

  celery-beat:
    build: ./url_reducer/
    container_name: celery_beat
    hostname: celery_beat
    restart: always
    env_file: .env
    command: "celery --app url_reducer beat -l INFO -s /tmp/celerybeat-schedule"
    volumes:
      - url_reducer:/code/url_reducer
      - /etc/localtime:/etc/localtime:ro
    links:
      - celery-worker
    depends_on:
      - url_reducer
      - mysql
      - redis
    networks:
      - net

  front:
    container_name: front
    build:
      context: ./front
      args:
        - API_HOST=api.redirect.link
        - NODE_ENV=production
    expose:
     - "7000"
    restart: unless-stopped
    depends_on:
      - url_reducer
      - proxy
      - mysql
    networks:
      - net

  reverse_proxy:
    container_name: revers_proxy
    build:
      context: .
      dockerfile: revers_proxy/Dockerfile
    command: /bin/bash entrypoint.sh
    restart: unless-stopped
    expose:
      - "80"
    ports:
      - "80:80"
    links:
      - proxy
    depends_on:
      - url_reducer
      - proxy
      - front
    networks:
      - net

volumes:
  mysql_data:
  url_reducer:
  static_data:
  docker_data:

networks:
  net:
    driver: bridge


